import telebot
from telebot.handler_backends import State, StatesGroup
from telebot import StateMemoryStorage, custom_filters

import re

from api_token import API_TOKEN
from DB import DbConnect
from Download import download

pattern = r'(https?://)?(www\.)?(youtube|youtu|youtube-nocookie)\.(com|be)/(watch\?v=|embed/|v/|.+\?v=)?([^&=%\?]{11})'

state_storage = StateMemoryStorage()

bot = telebot.TeleBot(API_TOKEN, state_storage=state_storage)


class States(StatesGroup):
    url = State()


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    db_conn = DbConnect(message.chat.id)
    db_conn.connect()

    markup = telebot.types.InlineKeyboardMarkup()
    bt_start = telebot.types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å', callback_data='ready')
    markup.add(bt_start)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ YouTube üìπ',
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'ready')
def callback(call: telebot.types.CallbackQuery):
    bot.set_state(call.from_user.id, States.url, call.message.chat.id)
    bot.send_message(call.message.chat.id, '–°—É–ø–µ—Ä! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ YouTube üì≤')


@bot.message_handler(content_types=['text'], state=States.url)
def download_url(message: telebot.types.Message):
    if re.findall(pattern, message.text):
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –Ω–∞—á–Ω–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∫–∞ ‚öôÔ∏è')

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['url'] = message.text
            msg = bot.send_message(message.chat.id, '--------------------')
            download(data['url'], message.chat.id)

        bot.delete_message(message.chat.id, msg.message_id)
        bot.send_message(message.chat.id, '–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ üéâ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ üì•')
        db_get_url = DbConnect(message.chat.id)
        result = db_get_url.get_url()

        if result != 'None':
            with open(f'{result}', 'rb') as video:
                bot.send_video(message.chat.id, video, caption='–î–µ—Ä–∂–∏ üéÅ')
        else:
            bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∏–¥–µ–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 50 –ú–ë - —è –Ω–µ —Å–º–æ–≥—É –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å üòî')

        bot.delete_state(message.from_user.id, message.chat.id)

    else:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞. –ü—Ä–æ–≤–µ—Ä—å –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å üîç')


@bot.message_handler(content_types=['text'])
def more_text(message: telebot.types.Message):
    bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ ‚ùå\n\n–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å"')


if __name__ == '__main__':
    bot.add_custom_filter(custom_filters.StateFilter(bot))
    bot.infinity_polling()
